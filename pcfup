#!/bin/bash

export PCFUP_VERSION=0.1.0

declare -r SCRIPT_NAME=$(readlink -f ${BASH_SOURCE[0]})
export PCFUP_DIR=$(dirname $SCRIPT_NAME)

getopt --test > /dev/null
if [[ $? -ne 4 ]]; then
    echo "[ERR] Iâ€™m sorry, `getopt --test` failed in this environment."
    exit 1
fi

OPTIONS=vd:t:u:k
LONGOPTIONS=verbose,download-folder:,om-username:,om-password:,skip-ssl-validation,iaas:,offline,prepare-offline

export OPTIONS_HELP="
  -v|--verbose                 bool    Show verbose output during command execution
  -d|--download-folder         string  Download folder for local product and stemcell cache
  -t|--om-target               string  Location of the Operations Manager VM (alternative env OM_TARGET)
  -u|--om-username             string  Admin username for the Operations Manager (alternatively env OM_USERNAME)
  --om-password                string  Admin password for the Operations Manager (alternatively env OM_PASSWORD)
  -k|--skip-ssl-validation     bool    Skip the ssl validation for connections to the Operations Manager
  --iaas                       string  Name of the IaaS you are using, used for matching in stemcell names (e.g. vsphere)
* --offline                    bool    Offline mode which will not try to connect to PivNet
* --prepare-offline            bool    Preparation mode for the offline mode, will download files from pivnet, but do not connect to Operations Manager"

PARSED=$(getopt --options=$OPTIONS --longoptions=$LONGOPTIONS --name "$0" -- "$@")
if [[ $? -ne 0 ]]; then
    exit 2
fi
eval set -- "$PARSED"

export DOWNLOADS_FOLDER="downloads"

OM_ARGS=
export ENABLE_VERBOSE=0

while true; do
  case "$1" in
    -v|--verbose)
      ENABLE_VERBOSE=1
      shift
      ;;
    -d|--download-folder)
      DOWNLOADS_FOLDER="$2"
      shift 2
      ;;
    -t|--om-target)
      OM_TARGET="$2"
      shift 2
      ;;
    -u|--om-username)
      OM_USERNAME="$2"
      shift 2
      ;;
    --om-password)
      OM_PASSWORD="$2"
      shift 2
      ;;
    -k|--skip-ssl-validation)
      OM_ARGS="$OM_ARGS --skip-ssl-validation "
      shift 1
      ;;
    --iaas)
      IAAS="$2"
      shift 2
      ;;
    --offline)
      ;;
    --prepare-offline)
      ;;
    --)
      shift
      break
      ;;
    *)
      echo "Programming error"
      exit 3
      ;;
  esac
done


set -eu

export PATH=~/bin:$PATH

if [[ $# -lt 1 ]]; then
  COMMAND="help"
else
  COMMAND=$(basename $1)
fi

if [ -f $PCFUP_DIR/commands/$COMMAND.sh ]; then
  . $PCFUP_DIR/commands/$COMMAND.sh
else
  . $PCFUP_DIR/methods/log.sh
  logError "'$1' is not a valid command"
  exit 11
fi